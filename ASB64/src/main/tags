!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALIVE0	nx_gpio.h	/^	ALIVE0,	 ALIVE1,  ALIVE2,  ALIVE3,  ALIVE4,  ALIVE5,  ALIVE6,  ALIVE7,$/;"	e	enum:NX_GPIO
ALIVE1	nx_gpio.h	/^	ALIVE0,	 ALIVE1,  ALIVE2,  ALIVE3,  ALIVE4,  ALIVE5,  ALIVE6,  ALIVE7,$/;"	e	enum:NX_GPIO
ALIVE2	nx_gpio.h	/^	ALIVE0,	 ALIVE1,  ALIVE2,  ALIVE3,  ALIVE4,  ALIVE5,  ALIVE6,  ALIVE7,$/;"	e	enum:NX_GPIO
ALIVE3	nx_gpio.h	/^	ALIVE0,	 ALIVE1,  ALIVE2,  ALIVE3,  ALIVE4,  ALIVE5,  ALIVE6,  ALIVE7,$/;"	e	enum:NX_GPIO
ALIVE4	nx_gpio.h	/^	ALIVE0,	 ALIVE1,  ALIVE2,  ALIVE3,  ALIVE4,  ALIVE5,  ALIVE6,  ALIVE7,$/;"	e	enum:NX_GPIO
ALIVE5	nx_gpio.h	/^	ALIVE0,	 ALIVE1,  ALIVE2,  ALIVE3,  ALIVE4,  ALIVE5,  ALIVE6,  ALIVE7,$/;"	e	enum:NX_GPIO
ALIVE6	nx_gpio.h	/^	ALIVE0,	 ALIVE1,  ALIVE2,  ALIVE3,  ALIVE4,  ALIVE5,  ALIVE6,  ALIVE7,$/;"	e	enum:NX_GPIO
ALIVE7	nx_gpio.h	/^	ALIVE0,	 ALIVE1,  ALIVE2,  ALIVE3,  ALIVE4,  ALIVE5,  ALIVE6,  ALIVE7,$/;"	e	enum:NX_GPIO
ASB_CTRL_OPCODE	asb_protocol.h	/^} ASB_CTRL_OPCODE;$/;"	t	typeref:enum:__anon2
ASB_CTRL_PACKET	asb_protocol.h	/^typedef struct ASB_CTRL_PACKET{$/;"	s
ASB_CTRL_PACKET	asb_protocol.h	/^} ASB_CTRL_PACKET;$/;"	t	typeref:struct:ASB_CTRL_PACKET
BIN_3D	main.cpp	/^	BIN_3D           =  34,$/;"	e	enum:__anon5	file:
BIN_AC97	main.cpp	/^	BIN_AC97         = 207,	\/\/	SFR$/;"	e	enum:__anon5	file:
BIN_ADC	main.cpp	/^	BIN_ADC          =  22,$/;"	e	enum:__anon5	file:
BIN_AES	main.cpp	/^	BIN_AES          = 213,	\/\/	SFR$/;"	e	enum:__anon5	file:
BIN_ARM_DVFS_1	main.cpp	/^	BIN_ARM_DVFS_1   =  72, \/\/	1.4 GHz$/;"	e	enum:__anon5	file:
BIN_ARM_DVFS_10	main.cpp	/^	BIN_ARM_DVFS_10  =  81, \/\/	500 MHz$/;"	e	enum:__anon5	file:
BIN_ARM_DVFS_11	main.cpp	/^	BIN_ARM_DVFS_11  =  82, \/\/	400 MHz$/;"	e	enum:__anon5	file:
BIN_ARM_DVFS_2	main.cpp	/^	BIN_ARM_DVFS_2   =  73, \/\/	1.3 GHz$/;"	e	enum:__anon5	file:
BIN_ARM_DVFS_3	main.cpp	/^	BIN_ARM_DVFS_3   =  74, \/\/	1.2 GHz$/;"	e	enum:__anon5	file:
BIN_ARM_DVFS_4	main.cpp	/^	BIN_ARM_DVFS_4   =  75, \/\/	1.1 GHz$/;"	e	enum:__anon5	file:
BIN_ARM_DVFS_5	main.cpp	/^	BIN_ARM_DVFS_5   =  76, \/\/	1.0 GHz$/;"	e	enum:__anon5	file:
BIN_ARM_DVFS_6	main.cpp	/^	BIN_ARM_DVFS_6   =  77, \/\/	900 MHz$/;"	e	enum:__anon5	file:
BIN_ARM_DVFS_7	main.cpp	/^	BIN_ARM_DVFS_7   =  78, \/\/	800 MHz$/;"	e	enum:__anon5	file:
BIN_ARM_DVFS_8	main.cpp	/^	BIN_ARM_DVFS_8   =  79, \/\/	700 MHz$/;"	e	enum:__anon5	file:
BIN_ARM_DVFS_9	main.cpp	/^	BIN_ARM_DVFS_9   =  80, \/\/	600 MHz$/;"	e	enum:__anon5	file:
BIN_CLOCK_GEN	main.cpp	/^	BIN_CLOCK_GEN    = 214,	\/\/	Almost IP use clock generator.$/;"	e	enum:__anon5	file:
BIN_CPU_ALIVE	main.cpp	/^	BIN_CPU_ALIVE    =  56, \/\/	Sleep\/Wakeup$/;"	e	enum:__anon5	file:
BIN_CPU_ID	main.cpp	/^	BIN_CPU_ID       =   8,$/;"	e	enum:__anon5	file:
BIN_CPU_SMP	main.cpp	/^	BIN_CPU_SMP      = 201,$/;"	e	enum:__anon5	file:
BIN_DMA	main.cpp	/^	BIN_DMA          =  27,	\/\/	Tested in the I2S Test.$/;"	e	enum:__anon5	file:
BIN_DPC	main.cpp	/^	BIN_DPC          = 211,	\/\/	BIN_MLC$/;"	e	enum:__anon5	file:
BIN_GMAC	main.cpp	/^	BIN_GMAC         = 202,$/;"	e	enum:__anon5	file:
BIN_GPIO	main.cpp	/^	BIN_GPIO         =  64,$/;"	e	enum:__anon5	file:
BIN_HDMI	main.cpp	/^	BIN_HDMI         =  41,	\/\/	SFR$/;"	e	enum:__anon5	file:
BIN_I2C	main.cpp	/^	BIN_I2C          =  13,$/;"	e	enum:__anon5	file:
BIN_I2S	main.cpp	/^	BIN_I2S          =  12,$/;"	e	enum:__anon5	file:
BIN_INTERRUPT	main.cpp	/^	BIN_INTERRUPT    =  31,	\/\/	Almost IP using interrupt.$/;"	e	enum:__anon5	file:
BIN_L2_CACHE	main.cpp	/^	BIN_L2_CACHE     =  68,	\/\/	All Program.$/;"	e	enum:__anon5	file:
BIN_LVDS	main.cpp	/^	BIN_LVDS         = 212,	\/\/	BIN_LVDS$/;"	e	enum:__anon5	file:
BIN_MCU_A	main.cpp	/^	BIN_MCU_A        =  61,	\/\/	DRAM$/;"	e	enum:__anon5	file:
BIN_MCU_S	main.cpp	/^	BIN_MCU_S        =  19,	\/\/	NAND$/;"	e	enum:__anon5	file:
BIN_MIPI_DSI	main.cpp	/^	BIN_MIPI_DSI     =  40,	\/\/	SFR$/;"	e	enum:__anon5	file:
BIN_MLC	main.cpp	/^	BIN_MLC          = 210,	\/\/	MLC -> DPC and MLC -> LVDS$/;"	e	enum:__anon5	file:
BIN_MPEG_TS	main.cpp	/^	BIN_MPEG_TS      =  38,	\/\/	SFR$/;"	e	enum:__anon5	file:
BIN_OTG_DEVICE	main.cpp	/^	BIN_OTG_DEVICE   = 209,	\/\/	USB Host & USB HSIC$/;"	e	enum:__anon5	file:
BIN_OTG_HOST	main.cpp	/^	BIN_OTG_HOST     = 208,$/;"	e	enum:__anon5	file:
BIN_PDM	main.cpp	/^	BIN_PDM          = 206,	\/\/	PDM record$/;"	e	enum:__anon5	file:
BIN_PPM	main.cpp	/^	BIN_PPM          = 204,$/;"	e	enum:__anon5	file:
BIN_PWM	main.cpp	/^	BIN_PWM          = 205,	\/\/	SFR$/;"	e	enum:__anon5	file:
BIN_RO_CHECK	main.cpp	/^	BIN_RO_CHECK     = 215,	$/;"	e	enum:__anon5	file:
BIN_RTC	main.cpp	/^	BIN_RTC          =  32,$/;"	e	enum:__anon5	file:
BIN_SDMMC	main.cpp	/^	BIN_SDMMC        =  47,$/;"	e	enum:__anon5	file:
BIN_SPDIF	main.cpp	/^	BIN_SPDIF        =  14,$/;"	e	enum:__anon5	file:
BIN_SPI	main.cpp	/^	BIN_SPI          =  10,	\/\/	SFR and Boot$/;"	e	enum:__anon5	file:
BIN_TIMER	main.cpp	/^	BIN_TIMER        =  30,	\/\/	Linux System.$/;"	e	enum:__anon5	file:
BIN_TMU	main.cpp	/^	BIN_TMU		     = 216,	$/;"	e	enum:__anon5	file:
BIN_UART	main.cpp	/^	BIN_UART         =  11,$/;"	e	enum:__anon5	file:
BIN_USB_HOST	main.cpp	/^	BIN_USB_HOST     =   9,$/;"	e	enum:__anon5	file:
BIN_USB_HSIC	main.cpp	/^	BIN_USB_HSIC     = 126,$/;"	e	enum:__anon5	file:
BIN_VIP_0	main.cpp	/^	BIN_VIP_0        =  70,	\/\/	SFR$/;"	e	enum:__anon5	file:
BIN_VIP_1	main.cpp	/^	BIN_VIP_1        = 203,	\/\/	SFR , MIPI CSI & VIP 1$/;"	e	enum:__anon5	file:
BIN_VPP	main.cpp	/^	BIN_VPP          = 160,	\/\/	SFR$/;"	e	enum:__anon5	file:
BIN_VPU	main.cpp	/^	BIN_VPU          =  24,$/;"	e	enum:__anon5	file:
BIN_WATCH_DOG	main.cpp	/^	BIN_WATCH_DOG    =  67,$/;"	e	enum:__anon5	file:
CASBProtcol	asb_protocol.cpp	/^CASBProtcol::CASBProtcol()$/;"	f	class:CASBProtcol
CASBProtcol	asb_protocol.h	/^class CASBProtcol{$/;"	c
CHECK_SIGNAL	asb_protocol.cpp	48;"	d	file:
CHIPINFO_TYPE	ecid.h	/^typedef struct CHIPINFO_TYPE{$/;"	s
CHIPINFO_TYPE	ecid.h	/^} CHIPINFO_TYPE;$/;"	t	typeref:struct:CHIPINFO_TYPE
CMD_ASB_TO_DUT	asb_protocol.h	/^	CMD_ASB_TO_DUT = 0xC,$/;"	e	enum:__anon1
CMD_DUT_TO_ASB	asb_protocol.h	/^	CMD_DUT_TO_ASB = 0xA,$/;"	e	enum:__anon1
COBJS	Makefile	/^COBJS	:=$/;"	m
CPPOBJS	Makefile	/^CPPOBJS	:=$/;"	m
CPU_FREQ_FILE	dvfsutil.c	127;"	d	file:
CPU_FREQ_FILE_PREFIX	dvfsutil.c	39;"	d	file:
CSPI	spi.cpp	/^CSPI::CSPI()$/;"	f	class:CSPI
CSPI	spi.h	/^class CSPI{$/;"	c
CheckCommand	asb_protocol.cpp	/^static int32_t CheckCommand( ASB_CTRL_PACKET *pkt )$/;"	f	file:
ChipInfo	asb_protocol.cpp	/^bool CASBProtcol::ChipInfo( uint32_t bin )$/;"	f	class:CASBProtcol
ConvertMSBLSB	ecid.cpp	/^static unsigned int ConvertMSBLSB( uint32_t data, int bits )$/;"	f	file:
DEV_NAME	spi.cpp	12;"	d	file:
DUMP	main.cpp	23;"	d	file:
DUMP_LIMIT	main.cpp	24;"	d	file:
DUMP_PROTOCOL	asb_protocol.h	8;"	d
DumpPacket	asb_protocol.cpp	/^static void DumpPacket( ASB_CTRL_PACKET *packet )$/;"	f	file:
ECID_FILE_NAME	dvfsutil.c	195;"	d	file:
ECID_FILE_NAME	ecid.h	6;"	d
EN_CONNECT_ASB	main.cpp	22;"	d	file:
GPIOA0	nx_gpio.h	/^	GPIOA0,	 GPIOA1,  GPIOA2,  GPIOA3,  GPIOA4,  GPIOA5,  GPIOA6,  GPIOA7,$/;"	e	enum:NX_GPIO
GPIOA1	nx_gpio.h	/^	GPIOA0,	 GPIOA1,  GPIOA2,  GPIOA3,  GPIOA4,  GPIOA5,  GPIOA6,  GPIOA7,$/;"	e	enum:NX_GPIO
GPIOA10	nx_gpio.h	/^	GPIOA8,  GPIOA9,  GPIOA10, GPIOA11, GPIOA12, GPIOA13, GPIOA14, GPIOA15,$/;"	e	enum:NX_GPIO
GPIOA11	nx_gpio.h	/^	GPIOA8,  GPIOA9,  GPIOA10, GPIOA11, GPIOA12, GPIOA13, GPIOA14, GPIOA15,$/;"	e	enum:NX_GPIO
GPIOA12	nx_gpio.h	/^	GPIOA8,  GPIOA9,  GPIOA10, GPIOA11, GPIOA12, GPIOA13, GPIOA14, GPIOA15,$/;"	e	enum:NX_GPIO
GPIOA13	nx_gpio.h	/^	GPIOA8,  GPIOA9,  GPIOA10, GPIOA11, GPIOA12, GPIOA13, GPIOA14, GPIOA15,$/;"	e	enum:NX_GPIO
GPIOA14	nx_gpio.h	/^	GPIOA8,  GPIOA9,  GPIOA10, GPIOA11, GPIOA12, GPIOA13, GPIOA14, GPIOA15,$/;"	e	enum:NX_GPIO
GPIOA15	nx_gpio.h	/^	GPIOA8,  GPIOA9,  GPIOA10, GPIOA11, GPIOA12, GPIOA13, GPIOA14, GPIOA15,$/;"	e	enum:NX_GPIO
GPIOA16	nx_gpio.h	/^	GPIOA16, GPIOA17, GPIOA18, GPIOA19, GPIOA20, GPIOA21, GPIOA22, GPIOA23,$/;"	e	enum:NX_GPIO
GPIOA17	nx_gpio.h	/^	GPIOA16, GPIOA17, GPIOA18, GPIOA19, GPIOA20, GPIOA21, GPIOA22, GPIOA23,$/;"	e	enum:NX_GPIO
GPIOA18	nx_gpio.h	/^	GPIOA16, GPIOA17, GPIOA18, GPIOA19, GPIOA20, GPIOA21, GPIOA22, GPIOA23,$/;"	e	enum:NX_GPIO
GPIOA19	nx_gpio.h	/^	GPIOA16, GPIOA17, GPIOA18, GPIOA19, GPIOA20, GPIOA21, GPIOA22, GPIOA23,$/;"	e	enum:NX_GPIO
GPIOA2	nx_gpio.h	/^	GPIOA0,	 GPIOA1,  GPIOA2,  GPIOA3,  GPIOA4,  GPIOA5,  GPIOA6,  GPIOA7,$/;"	e	enum:NX_GPIO
GPIOA20	nx_gpio.h	/^	GPIOA16, GPIOA17, GPIOA18, GPIOA19, GPIOA20, GPIOA21, GPIOA22, GPIOA23,$/;"	e	enum:NX_GPIO
GPIOA21	nx_gpio.h	/^	GPIOA16, GPIOA17, GPIOA18, GPIOA19, GPIOA20, GPIOA21, GPIOA22, GPIOA23,$/;"	e	enum:NX_GPIO
GPIOA22	nx_gpio.h	/^	GPIOA16, GPIOA17, GPIOA18, GPIOA19, GPIOA20, GPIOA21, GPIOA22, GPIOA23,$/;"	e	enum:NX_GPIO
GPIOA23	nx_gpio.h	/^	GPIOA16, GPIOA17, GPIOA18, GPIOA19, GPIOA20, GPIOA21, GPIOA22, GPIOA23,$/;"	e	enum:NX_GPIO
GPIOA24	nx_gpio.h	/^	GPIOA24, GPIOA25, GPIOA26, GPIOA27, GPIOA28, GPIOA29, GPIOA30, GPIOA31,$/;"	e	enum:NX_GPIO
GPIOA25	nx_gpio.h	/^	GPIOA24, GPIOA25, GPIOA26, GPIOA27, GPIOA28, GPIOA29, GPIOA30, GPIOA31,$/;"	e	enum:NX_GPIO
GPIOA26	nx_gpio.h	/^	GPIOA24, GPIOA25, GPIOA26, GPIOA27, GPIOA28, GPIOA29, GPIOA30, GPIOA31,$/;"	e	enum:NX_GPIO
GPIOA27	nx_gpio.h	/^	GPIOA24, GPIOA25, GPIOA26, GPIOA27, GPIOA28, GPIOA29, GPIOA30, GPIOA31,$/;"	e	enum:NX_GPIO
GPIOA28	nx_gpio.h	/^	GPIOA24, GPIOA25, GPIOA26, GPIOA27, GPIOA28, GPIOA29, GPIOA30, GPIOA31,$/;"	e	enum:NX_GPIO
GPIOA29	nx_gpio.h	/^	GPIOA24, GPIOA25, GPIOA26, GPIOA27, GPIOA28, GPIOA29, GPIOA30, GPIOA31,$/;"	e	enum:NX_GPIO
GPIOA3	nx_gpio.h	/^	GPIOA0,	 GPIOA1,  GPIOA2,  GPIOA3,  GPIOA4,  GPIOA5,  GPIOA6,  GPIOA7,$/;"	e	enum:NX_GPIO
GPIOA30	nx_gpio.h	/^	GPIOA24, GPIOA25, GPIOA26, GPIOA27, GPIOA28, GPIOA29, GPIOA30, GPIOA31,$/;"	e	enum:NX_GPIO
GPIOA31	nx_gpio.h	/^	GPIOA24, GPIOA25, GPIOA26, GPIOA27, GPIOA28, GPIOA29, GPIOA30, GPIOA31,$/;"	e	enum:NX_GPIO
GPIOA4	nx_gpio.h	/^	GPIOA0,	 GPIOA1,  GPIOA2,  GPIOA3,  GPIOA4,  GPIOA5,  GPIOA6,  GPIOA7,$/;"	e	enum:NX_GPIO
GPIOA5	nx_gpio.h	/^	GPIOA0,	 GPIOA1,  GPIOA2,  GPIOA3,  GPIOA4,  GPIOA5,  GPIOA6,  GPIOA7,$/;"	e	enum:NX_GPIO
GPIOA6	nx_gpio.h	/^	GPIOA0,	 GPIOA1,  GPIOA2,  GPIOA3,  GPIOA4,  GPIOA5,  GPIOA6,  GPIOA7,$/;"	e	enum:NX_GPIO
GPIOA7	nx_gpio.h	/^	GPIOA0,	 GPIOA1,  GPIOA2,  GPIOA3,  GPIOA4,  GPIOA5,  GPIOA6,  GPIOA7,$/;"	e	enum:NX_GPIO
GPIOA8	nx_gpio.h	/^	GPIOA8,  GPIOA9,  GPIOA10, GPIOA11, GPIOA12, GPIOA13, GPIOA14, GPIOA15,$/;"	e	enum:NX_GPIO
GPIOA9	nx_gpio.h	/^	GPIOA8,  GPIOA9,  GPIOA10, GPIOA11, GPIOA12, GPIOA13, GPIOA14, GPIOA15,$/;"	e	enum:NX_GPIO
GPIOB0	nx_gpio.h	/^	GPIOB0,	 GPIOB1,  GPIOB2,  GPIOB3,  GPIOB4,  GPIOB5,  GPIOB6,  GPIOB7,$/;"	e	enum:NX_GPIO
GPIOB1	nx_gpio.h	/^	GPIOB0,	 GPIOB1,  GPIOB2,  GPIOB3,  GPIOB4,  GPIOB5,  GPIOB6,  GPIOB7,$/;"	e	enum:NX_GPIO
GPIOB10	nx_gpio.h	/^	GPIOB8,  GPIOB9,  GPIOB10, GPIOB11, GPIOB12, GPIOB13, GPIOB14, GPIOB15,$/;"	e	enum:NX_GPIO
GPIOB11	nx_gpio.h	/^	GPIOB8,  GPIOB9,  GPIOB10, GPIOB11, GPIOB12, GPIOB13, GPIOB14, GPIOB15,$/;"	e	enum:NX_GPIO
GPIOB12	nx_gpio.h	/^	GPIOB8,  GPIOB9,  GPIOB10, GPIOB11, GPIOB12, GPIOB13, GPIOB14, GPIOB15,$/;"	e	enum:NX_GPIO
GPIOB13	nx_gpio.h	/^	GPIOB8,  GPIOB9,  GPIOB10, GPIOB11, GPIOB12, GPIOB13, GPIOB14, GPIOB15,$/;"	e	enum:NX_GPIO
GPIOB14	nx_gpio.h	/^	GPIOB8,  GPIOB9,  GPIOB10, GPIOB11, GPIOB12, GPIOB13, GPIOB14, GPIOB15,$/;"	e	enum:NX_GPIO
GPIOB15	nx_gpio.h	/^	GPIOB8,  GPIOB9,  GPIOB10, GPIOB11, GPIOB12, GPIOB13, GPIOB14, GPIOB15,$/;"	e	enum:NX_GPIO
GPIOB16	nx_gpio.h	/^	GPIOB16, GPIOB17, GPIOB18, GPIOB19, GPIOB20, GPIOB21, GPIOB22, GPIOB23,$/;"	e	enum:NX_GPIO
GPIOB17	nx_gpio.h	/^	GPIOB16, GPIOB17, GPIOB18, GPIOB19, GPIOB20, GPIOB21, GPIOB22, GPIOB23,$/;"	e	enum:NX_GPIO
GPIOB18	nx_gpio.h	/^	GPIOB16, GPIOB17, GPIOB18, GPIOB19, GPIOB20, GPIOB21, GPIOB22, GPIOB23,$/;"	e	enum:NX_GPIO
GPIOB19	nx_gpio.h	/^	GPIOB16, GPIOB17, GPIOB18, GPIOB19, GPIOB20, GPIOB21, GPIOB22, GPIOB23,$/;"	e	enum:NX_GPIO
GPIOB2	nx_gpio.h	/^	GPIOB0,	 GPIOB1,  GPIOB2,  GPIOB3,  GPIOB4,  GPIOB5,  GPIOB6,  GPIOB7,$/;"	e	enum:NX_GPIO
GPIOB20	nx_gpio.h	/^	GPIOB16, GPIOB17, GPIOB18, GPIOB19, GPIOB20, GPIOB21, GPIOB22, GPIOB23,$/;"	e	enum:NX_GPIO
GPIOB21	nx_gpio.h	/^	GPIOB16, GPIOB17, GPIOB18, GPIOB19, GPIOB20, GPIOB21, GPIOB22, GPIOB23,$/;"	e	enum:NX_GPIO
GPIOB22	nx_gpio.h	/^	GPIOB16, GPIOB17, GPIOB18, GPIOB19, GPIOB20, GPIOB21, GPIOB22, GPIOB23,$/;"	e	enum:NX_GPIO
GPIOB23	nx_gpio.h	/^	GPIOB16, GPIOB17, GPIOB18, GPIOB19, GPIOB20, GPIOB21, GPIOB22, GPIOB23,$/;"	e	enum:NX_GPIO
GPIOB24	nx_gpio.h	/^	GPIOB24, GPIOB25, GPIOB26, GPIOB27, GPIOB28, GPIOB29, GPIOB30, GPIOB31,$/;"	e	enum:NX_GPIO
GPIOB25	nx_gpio.h	/^	GPIOB24, GPIOB25, GPIOB26, GPIOB27, GPIOB28, GPIOB29, GPIOB30, GPIOB31,$/;"	e	enum:NX_GPIO
GPIOB26	nx_gpio.h	/^	GPIOB24, GPIOB25, GPIOB26, GPIOB27, GPIOB28, GPIOB29, GPIOB30, GPIOB31,$/;"	e	enum:NX_GPIO
GPIOB27	nx_gpio.h	/^	GPIOB24, GPIOB25, GPIOB26, GPIOB27, GPIOB28, GPIOB29, GPIOB30, GPIOB31,$/;"	e	enum:NX_GPIO
GPIOB28	nx_gpio.h	/^	GPIOB24, GPIOB25, GPIOB26, GPIOB27, GPIOB28, GPIOB29, GPIOB30, GPIOB31,$/;"	e	enum:NX_GPIO
GPIOB29	nx_gpio.h	/^	GPIOB24, GPIOB25, GPIOB26, GPIOB27, GPIOB28, GPIOB29, GPIOB30, GPIOB31,$/;"	e	enum:NX_GPIO
GPIOB3	nx_gpio.h	/^	GPIOB0,	 GPIOB1,  GPIOB2,  GPIOB3,  GPIOB4,  GPIOB5,  GPIOB6,  GPIOB7,$/;"	e	enum:NX_GPIO
GPIOB30	nx_gpio.h	/^	GPIOB24, GPIOB25, GPIOB26, GPIOB27, GPIOB28, GPIOB29, GPIOB30, GPIOB31,$/;"	e	enum:NX_GPIO
GPIOB31	nx_gpio.h	/^	GPIOB24, GPIOB25, GPIOB26, GPIOB27, GPIOB28, GPIOB29, GPIOB30, GPIOB31,$/;"	e	enum:NX_GPIO
GPIOB4	nx_gpio.h	/^	GPIOB0,	 GPIOB1,  GPIOB2,  GPIOB3,  GPIOB4,  GPIOB5,  GPIOB6,  GPIOB7,$/;"	e	enum:NX_GPIO
GPIOB5	nx_gpio.h	/^	GPIOB0,	 GPIOB1,  GPIOB2,  GPIOB3,  GPIOB4,  GPIOB5,  GPIOB6,  GPIOB7,$/;"	e	enum:NX_GPIO
GPIOB6	nx_gpio.h	/^	GPIOB0,	 GPIOB1,  GPIOB2,  GPIOB3,  GPIOB4,  GPIOB5,  GPIOB6,  GPIOB7,$/;"	e	enum:NX_GPIO
GPIOB7	nx_gpio.h	/^	GPIOB0,	 GPIOB1,  GPIOB2,  GPIOB3,  GPIOB4,  GPIOB5,  GPIOB6,  GPIOB7,$/;"	e	enum:NX_GPIO
GPIOB8	nx_gpio.h	/^	GPIOB8,  GPIOB9,  GPIOB10, GPIOB11, GPIOB12, GPIOB13, GPIOB14, GPIOB15,$/;"	e	enum:NX_GPIO
GPIOB9	nx_gpio.h	/^	GPIOB8,  GPIOB9,  GPIOB10, GPIOB11, GPIOB12, GPIOB13, GPIOB14, GPIOB15,$/;"	e	enum:NX_GPIO
GPIOC0	nx_gpio.h	/^	GPIOC0,	 GPIOC1,  GPIOC2,  GPIOC3,  GPIOC4,  GPIOC5,  GPIOC6,  GPIOC7,$/;"	e	enum:NX_GPIO
GPIOC1	nx_gpio.h	/^	GPIOC0,	 GPIOC1,  GPIOC2,  GPIOC3,  GPIOC4,  GPIOC5,  GPIOC6,  GPIOC7,$/;"	e	enum:NX_GPIO
GPIOC10	nx_gpio.h	/^	GPIOC8,  GPIOC9,  GPIOC10, GPIOC11, GPIOC12, GPIOC13, GPIOC14, GPIOC15,$/;"	e	enum:NX_GPIO
GPIOC11	nx_gpio.h	/^	GPIOC8,  GPIOC9,  GPIOC10, GPIOC11, GPIOC12, GPIOC13, GPIOC14, GPIOC15,$/;"	e	enum:NX_GPIO
GPIOC12	nx_gpio.h	/^	GPIOC8,  GPIOC9,  GPIOC10, GPIOC11, GPIOC12, GPIOC13, GPIOC14, GPIOC15,$/;"	e	enum:NX_GPIO
GPIOC13	nx_gpio.h	/^	GPIOC8,  GPIOC9,  GPIOC10, GPIOC11, GPIOC12, GPIOC13, GPIOC14, GPIOC15,$/;"	e	enum:NX_GPIO
GPIOC14	nx_gpio.h	/^	GPIOC8,  GPIOC9,  GPIOC10, GPIOC11, GPIOC12, GPIOC13, GPIOC14, GPIOC15,$/;"	e	enum:NX_GPIO
GPIOC15	nx_gpio.h	/^	GPIOC8,  GPIOC9,  GPIOC10, GPIOC11, GPIOC12, GPIOC13, GPIOC14, GPIOC15,$/;"	e	enum:NX_GPIO
GPIOC16	nx_gpio.h	/^	GPIOC16, GPIOC17, GPIOC18, GPIOC19, GPIOC20, GPIOC21, GPIOC22, GPIOC23,$/;"	e	enum:NX_GPIO
GPIOC17	nx_gpio.h	/^	GPIOC16, GPIOC17, GPIOC18, GPIOC19, GPIOC20, GPIOC21, GPIOC22, GPIOC23,$/;"	e	enum:NX_GPIO
GPIOC18	nx_gpio.h	/^	GPIOC16, GPIOC17, GPIOC18, GPIOC19, GPIOC20, GPIOC21, GPIOC22, GPIOC23,$/;"	e	enum:NX_GPIO
GPIOC19	nx_gpio.h	/^	GPIOC16, GPIOC17, GPIOC18, GPIOC19, GPIOC20, GPIOC21, GPIOC22, GPIOC23,$/;"	e	enum:NX_GPIO
GPIOC2	nx_gpio.h	/^	GPIOC0,	 GPIOC1,  GPIOC2,  GPIOC3,  GPIOC4,  GPIOC5,  GPIOC6,  GPIOC7,$/;"	e	enum:NX_GPIO
GPIOC20	nx_gpio.h	/^	GPIOC16, GPIOC17, GPIOC18, GPIOC19, GPIOC20, GPIOC21, GPIOC22, GPIOC23,$/;"	e	enum:NX_GPIO
GPIOC21	nx_gpio.h	/^	GPIOC16, GPIOC17, GPIOC18, GPIOC19, GPIOC20, GPIOC21, GPIOC22, GPIOC23,$/;"	e	enum:NX_GPIO
GPIOC22	nx_gpio.h	/^	GPIOC16, GPIOC17, GPIOC18, GPIOC19, GPIOC20, GPIOC21, GPIOC22, GPIOC23,$/;"	e	enum:NX_GPIO
GPIOC23	nx_gpio.h	/^	GPIOC16, GPIOC17, GPIOC18, GPIOC19, GPIOC20, GPIOC21, GPIOC22, GPIOC23,$/;"	e	enum:NX_GPIO
GPIOC24	nx_gpio.h	/^	GPIOC24, GPIOC25, GPIOC26, GPIOC27, GPIOC28, GPIOC29, GPIOC30, GPIOC31,$/;"	e	enum:NX_GPIO
GPIOC25	nx_gpio.h	/^	GPIOC24, GPIOC25, GPIOC26, GPIOC27, GPIOC28, GPIOC29, GPIOC30, GPIOC31,$/;"	e	enum:NX_GPIO
GPIOC26	nx_gpio.h	/^	GPIOC24, GPIOC25, GPIOC26, GPIOC27, GPIOC28, GPIOC29, GPIOC30, GPIOC31,$/;"	e	enum:NX_GPIO
GPIOC27	nx_gpio.h	/^	GPIOC24, GPIOC25, GPIOC26, GPIOC27, GPIOC28, GPIOC29, GPIOC30, GPIOC31,$/;"	e	enum:NX_GPIO
GPIOC28	nx_gpio.h	/^	GPIOC24, GPIOC25, GPIOC26, GPIOC27, GPIOC28, GPIOC29, GPIOC30, GPIOC31,$/;"	e	enum:NX_GPIO
GPIOC29	nx_gpio.h	/^	GPIOC24, GPIOC25, GPIOC26, GPIOC27, GPIOC28, GPIOC29, GPIOC30, GPIOC31,$/;"	e	enum:NX_GPIO
GPIOC3	nx_gpio.h	/^	GPIOC0,	 GPIOC1,  GPIOC2,  GPIOC3,  GPIOC4,  GPIOC5,  GPIOC6,  GPIOC7,$/;"	e	enum:NX_GPIO
GPIOC30	nx_gpio.h	/^	GPIOC24, GPIOC25, GPIOC26, GPIOC27, GPIOC28, GPIOC29, GPIOC30, GPIOC31,$/;"	e	enum:NX_GPIO
GPIOC31	nx_gpio.h	/^	GPIOC24, GPIOC25, GPIOC26, GPIOC27, GPIOC28, GPIOC29, GPIOC30, GPIOC31,$/;"	e	enum:NX_GPIO
GPIOC4	nx_gpio.h	/^	GPIOC0,	 GPIOC1,  GPIOC2,  GPIOC3,  GPIOC4,  GPIOC5,  GPIOC6,  GPIOC7,$/;"	e	enum:NX_GPIO
GPIOC5	nx_gpio.h	/^	GPIOC0,	 GPIOC1,  GPIOC2,  GPIOC3,  GPIOC4,  GPIOC5,  GPIOC6,  GPIOC7,$/;"	e	enum:NX_GPIO
GPIOC6	nx_gpio.h	/^	GPIOC0,	 GPIOC1,  GPIOC2,  GPIOC3,  GPIOC4,  GPIOC5,  GPIOC6,  GPIOC7,$/;"	e	enum:NX_GPIO
GPIOC7	nx_gpio.h	/^	GPIOC0,	 GPIOC1,  GPIOC2,  GPIOC3,  GPIOC4,  GPIOC5,  GPIOC6,  GPIOC7,$/;"	e	enum:NX_GPIO
GPIOC8	nx_gpio.h	/^	GPIOC8,  GPIOC9,  GPIOC10, GPIOC11, GPIOC12, GPIOC13, GPIOC14, GPIOC15,$/;"	e	enum:NX_GPIO
GPIOC9	nx_gpio.h	/^	GPIOC8,  GPIOC9,  GPIOC10, GPIOC11, GPIOC12, GPIOC13, GPIOC14, GPIOC15,$/;"	e	enum:NX_GPIO
GPIOD0	nx_gpio.h	/^	GPIOD0,	 GPIOD1,  GPIOD2,  GPIOD3,  GPIOD4,  GPIOD5,  GPIOD6,  GPIOD7,$/;"	e	enum:NX_GPIO
GPIOD1	nx_gpio.h	/^	GPIOD0,	 GPIOD1,  GPIOD2,  GPIOD3,  GPIOD4,  GPIOD5,  GPIOD6,  GPIOD7,$/;"	e	enum:NX_GPIO
GPIOD10	nx_gpio.h	/^	GPIOD8,  GPIOD9,  GPIOD10, GPIOD11, GPIOD12, GPIOD13, GPIOD14, GPIOD15,$/;"	e	enum:NX_GPIO
GPIOD11	nx_gpio.h	/^	GPIOD8,  GPIOD9,  GPIOD10, GPIOD11, GPIOD12, GPIOD13, GPIOD14, GPIOD15,$/;"	e	enum:NX_GPIO
GPIOD12	nx_gpio.h	/^	GPIOD8,  GPIOD9,  GPIOD10, GPIOD11, GPIOD12, GPIOD13, GPIOD14, GPIOD15,$/;"	e	enum:NX_GPIO
GPIOD13	nx_gpio.h	/^	GPIOD8,  GPIOD9,  GPIOD10, GPIOD11, GPIOD12, GPIOD13, GPIOD14, GPIOD15,$/;"	e	enum:NX_GPIO
GPIOD14	nx_gpio.h	/^	GPIOD8,  GPIOD9,  GPIOD10, GPIOD11, GPIOD12, GPIOD13, GPIOD14, GPIOD15,$/;"	e	enum:NX_GPIO
GPIOD15	nx_gpio.h	/^	GPIOD8,  GPIOD9,  GPIOD10, GPIOD11, GPIOD12, GPIOD13, GPIOD14, GPIOD15,$/;"	e	enum:NX_GPIO
GPIOD16	nx_gpio.h	/^	GPIOD16, GPIOD17, GPIOD18, GPIOD19, GPIOD20, GPIOD21, GPIOD22, GPIOD23,$/;"	e	enum:NX_GPIO
GPIOD17	nx_gpio.h	/^	GPIOD16, GPIOD17, GPIOD18, GPIOD19, GPIOD20, GPIOD21, GPIOD22, GPIOD23,$/;"	e	enum:NX_GPIO
GPIOD18	nx_gpio.h	/^	GPIOD16, GPIOD17, GPIOD18, GPIOD19, GPIOD20, GPIOD21, GPIOD22, GPIOD23,$/;"	e	enum:NX_GPIO
GPIOD19	nx_gpio.h	/^	GPIOD16, GPIOD17, GPIOD18, GPIOD19, GPIOD20, GPIOD21, GPIOD22, GPIOD23,$/;"	e	enum:NX_GPIO
GPIOD2	nx_gpio.h	/^	GPIOD0,	 GPIOD1,  GPIOD2,  GPIOD3,  GPIOD4,  GPIOD5,  GPIOD6,  GPIOD7,$/;"	e	enum:NX_GPIO
GPIOD20	nx_gpio.h	/^	GPIOD16, GPIOD17, GPIOD18, GPIOD19, GPIOD20, GPIOD21, GPIOD22, GPIOD23,$/;"	e	enum:NX_GPIO
GPIOD21	nx_gpio.h	/^	GPIOD16, GPIOD17, GPIOD18, GPIOD19, GPIOD20, GPIOD21, GPIOD22, GPIOD23,$/;"	e	enum:NX_GPIO
GPIOD22	nx_gpio.h	/^	GPIOD16, GPIOD17, GPIOD18, GPIOD19, GPIOD20, GPIOD21, GPIOD22, GPIOD23,$/;"	e	enum:NX_GPIO
GPIOD23	nx_gpio.h	/^	GPIOD16, GPIOD17, GPIOD18, GPIOD19, GPIOD20, GPIOD21, GPIOD22, GPIOD23,$/;"	e	enum:NX_GPIO
GPIOD24	nx_gpio.h	/^	GPIOD24, GPIOD25, GPIOD26, GPIOD27, GPIOD28, GPIOD29, GPIOD30, GPIOD31,$/;"	e	enum:NX_GPIO
GPIOD25	nx_gpio.h	/^	GPIOD24, GPIOD25, GPIOD26, GPIOD27, GPIOD28, GPIOD29, GPIOD30, GPIOD31,$/;"	e	enum:NX_GPIO
GPIOD26	nx_gpio.h	/^	GPIOD24, GPIOD25, GPIOD26, GPIOD27, GPIOD28, GPIOD29, GPIOD30, GPIOD31,$/;"	e	enum:NX_GPIO
GPIOD27	nx_gpio.h	/^	GPIOD24, GPIOD25, GPIOD26, GPIOD27, GPIOD28, GPIOD29, GPIOD30, GPIOD31,$/;"	e	enum:NX_GPIO
GPIOD28	nx_gpio.h	/^	GPIOD24, GPIOD25, GPIOD26, GPIOD27, GPIOD28, GPIOD29, GPIOD30, GPIOD31,$/;"	e	enum:NX_GPIO
GPIOD29	nx_gpio.h	/^	GPIOD24, GPIOD25, GPIOD26, GPIOD27, GPIOD28, GPIOD29, GPIOD30, GPIOD31,$/;"	e	enum:NX_GPIO
GPIOD3	nx_gpio.h	/^	GPIOD0,	 GPIOD1,  GPIOD2,  GPIOD3,  GPIOD4,  GPIOD5,  GPIOD6,  GPIOD7,$/;"	e	enum:NX_GPIO
GPIOD30	nx_gpio.h	/^	GPIOD24, GPIOD25, GPIOD26, GPIOD27, GPIOD28, GPIOD29, GPIOD30, GPIOD31,$/;"	e	enum:NX_GPIO
GPIOD31	nx_gpio.h	/^	GPIOD24, GPIOD25, GPIOD26, GPIOD27, GPIOD28, GPIOD29, GPIOD30, GPIOD31,$/;"	e	enum:NX_GPIO
GPIOD4	nx_gpio.h	/^	GPIOD0,	 GPIOD1,  GPIOD2,  GPIOD3,  GPIOD4,  GPIOD5,  GPIOD6,  GPIOD7,$/;"	e	enum:NX_GPIO
GPIOD5	nx_gpio.h	/^	GPIOD0,	 GPIOD1,  GPIOD2,  GPIOD3,  GPIOD4,  GPIOD5,  GPIOD6,  GPIOD7,$/;"	e	enum:NX_GPIO
GPIOD6	nx_gpio.h	/^	GPIOD0,	 GPIOD1,  GPIOD2,  GPIOD3,  GPIOD4,  GPIOD5,  GPIOD6,  GPIOD7,$/;"	e	enum:NX_GPIO
GPIOD7	nx_gpio.h	/^	GPIOD0,	 GPIOD1,  GPIOD2,  GPIOD3,  GPIOD4,  GPIOD5,  GPIOD6,  GPIOD7,$/;"	e	enum:NX_GPIO
GPIOD8	nx_gpio.h	/^	GPIOD8,  GPIOD9,  GPIOD10, GPIOD11, GPIOD12, GPIOD13, GPIOD14, GPIOD15,$/;"	e	enum:NX_GPIO
GPIOD9	nx_gpio.h	/^	GPIOD8,  GPIOD9,  GPIOD10, GPIOD11, GPIOD12, GPIOD13, GPIOD14, GPIOD15,$/;"	e	enum:NX_GPIO
GPIOE0	nx_gpio.h	/^	GPIOE0,	 GPIOE1,  GPIOE2,  GPIOE3,  GPIOE4,  GPIOE5,  GPIOE6,  GPIOE7,$/;"	e	enum:NX_GPIO
GPIOE1	nx_gpio.h	/^	GPIOE0,	 GPIOE1,  GPIOE2,  GPIOE3,  GPIOE4,  GPIOE5,  GPIOE6,  GPIOE7,$/;"	e	enum:NX_GPIO
GPIOE10	nx_gpio.h	/^	GPIOE8,  GPIOE9,  GPIOE10, GPIOE11, GPIOE12, GPIOE13, GPIOE14, GPIOE15,$/;"	e	enum:NX_GPIO
GPIOE11	nx_gpio.h	/^	GPIOE8,  GPIOE9,  GPIOE10, GPIOE11, GPIOE12, GPIOE13, GPIOE14, GPIOE15,$/;"	e	enum:NX_GPIO
GPIOE12	nx_gpio.h	/^	GPIOE8,  GPIOE9,  GPIOE10, GPIOE11, GPIOE12, GPIOE13, GPIOE14, GPIOE15,$/;"	e	enum:NX_GPIO
GPIOE13	nx_gpio.h	/^	GPIOE8,  GPIOE9,  GPIOE10, GPIOE11, GPIOE12, GPIOE13, GPIOE14, GPIOE15,$/;"	e	enum:NX_GPIO
GPIOE14	nx_gpio.h	/^	GPIOE8,  GPIOE9,  GPIOE10, GPIOE11, GPIOE12, GPIOE13, GPIOE14, GPIOE15,$/;"	e	enum:NX_GPIO
GPIOE15	nx_gpio.h	/^	GPIOE8,  GPIOE9,  GPIOE10, GPIOE11, GPIOE12, GPIOE13, GPIOE14, GPIOE15,$/;"	e	enum:NX_GPIO
GPIOE16	nx_gpio.h	/^	GPIOE16, GPIOE17, GPIOE18, GPIOE19, GPIOE20, GPIOE21, GPIOE22, GPIOE23,$/;"	e	enum:NX_GPIO
GPIOE17	nx_gpio.h	/^	GPIOE16, GPIOE17, GPIOE18, GPIOE19, GPIOE20, GPIOE21, GPIOE22, GPIOE23,$/;"	e	enum:NX_GPIO
GPIOE18	nx_gpio.h	/^	GPIOE16, GPIOE17, GPIOE18, GPIOE19, GPIOE20, GPIOE21, GPIOE22, GPIOE23,$/;"	e	enum:NX_GPIO
GPIOE19	nx_gpio.h	/^	GPIOE16, GPIOE17, GPIOE18, GPIOE19, GPIOE20, GPIOE21, GPIOE22, GPIOE23,$/;"	e	enum:NX_GPIO
GPIOE2	nx_gpio.h	/^	GPIOE0,	 GPIOE1,  GPIOE2,  GPIOE3,  GPIOE4,  GPIOE5,  GPIOE6,  GPIOE7,$/;"	e	enum:NX_GPIO
GPIOE20	nx_gpio.h	/^	GPIOE16, GPIOE17, GPIOE18, GPIOE19, GPIOE20, GPIOE21, GPIOE22, GPIOE23,$/;"	e	enum:NX_GPIO
GPIOE21	nx_gpio.h	/^	GPIOE16, GPIOE17, GPIOE18, GPIOE19, GPIOE20, GPIOE21, GPIOE22, GPIOE23,$/;"	e	enum:NX_GPIO
GPIOE22	nx_gpio.h	/^	GPIOE16, GPIOE17, GPIOE18, GPIOE19, GPIOE20, GPIOE21, GPIOE22, GPIOE23,$/;"	e	enum:NX_GPIO
GPIOE23	nx_gpio.h	/^	GPIOE16, GPIOE17, GPIOE18, GPIOE19, GPIOE20, GPIOE21, GPIOE22, GPIOE23,$/;"	e	enum:NX_GPIO
GPIOE24	nx_gpio.h	/^	GPIOE24, GPIOE25, GPIOE26, GPIOE27, GPIOE28, GPIOE29, GPIOE30, GPIOE31,$/;"	e	enum:NX_GPIO
GPIOE25	nx_gpio.h	/^	GPIOE24, GPIOE25, GPIOE26, GPIOE27, GPIOE28, GPIOE29, GPIOE30, GPIOE31,$/;"	e	enum:NX_GPIO
GPIOE26	nx_gpio.h	/^	GPIOE24, GPIOE25, GPIOE26, GPIOE27, GPIOE28, GPIOE29, GPIOE30, GPIOE31,$/;"	e	enum:NX_GPIO
GPIOE27	nx_gpio.h	/^	GPIOE24, GPIOE25, GPIOE26, GPIOE27, GPIOE28, GPIOE29, GPIOE30, GPIOE31,$/;"	e	enum:NX_GPIO
GPIOE28	nx_gpio.h	/^	GPIOE24, GPIOE25, GPIOE26, GPIOE27, GPIOE28, GPIOE29, GPIOE30, GPIOE31,$/;"	e	enum:NX_GPIO
GPIOE29	nx_gpio.h	/^	GPIOE24, GPIOE25, GPIOE26, GPIOE27, GPIOE28, GPIOE29, GPIOE30, GPIOE31,$/;"	e	enum:NX_GPIO
GPIOE3	nx_gpio.h	/^	GPIOE0,	 GPIOE1,  GPIOE2,  GPIOE3,  GPIOE4,  GPIOE5,  GPIOE6,  GPIOE7,$/;"	e	enum:NX_GPIO
GPIOE30	nx_gpio.h	/^	GPIOE24, GPIOE25, GPIOE26, GPIOE27, GPIOE28, GPIOE29, GPIOE30, GPIOE31,$/;"	e	enum:NX_GPIO
GPIOE31	nx_gpio.h	/^	GPIOE24, GPIOE25, GPIOE26, GPIOE27, GPIOE28, GPIOE29, GPIOE30, GPIOE31,$/;"	e	enum:NX_GPIO
GPIOE4	nx_gpio.h	/^	GPIOE0,	 GPIOE1,  GPIOE2,  GPIOE3,  GPIOE4,  GPIOE5,  GPIOE6,  GPIOE7,$/;"	e	enum:NX_GPIO
GPIOE5	nx_gpio.h	/^	GPIOE0,	 GPIOE1,  GPIOE2,  GPIOE3,  GPIOE4,  GPIOE5,  GPIOE6,  GPIOE7,$/;"	e	enum:NX_GPIO
GPIOE6	nx_gpio.h	/^	GPIOE0,	 GPIOE1,  GPIOE2,  GPIOE3,  GPIOE4,  GPIOE5,  GPIOE6,  GPIOE7,$/;"	e	enum:NX_GPIO
GPIOE7	nx_gpio.h	/^	GPIOE0,	 GPIOE1,  GPIOE2,  GPIOE3,  GPIOE4,  GPIOE5,  GPIOE6,  GPIOE7,$/;"	e	enum:NX_GPIO
GPIOE8	nx_gpio.h	/^	GPIOE8,  GPIOE9,  GPIOE10, GPIOE11, GPIOE12, GPIOE13, GPIOE14, GPIOE15,$/;"	e	enum:NX_GPIO
GPIOE9	nx_gpio.h	/^	GPIOE8,  GPIOE9,  GPIOE10, GPIOE11, GPIOE12, GPIOE13, GPIOE14, GPIOE15,$/;"	e	enum:NX_GPIO
GPIO_ASB_READY	asb_protocol.h	12;"	d
GPIO_DIRECTION_IN	nx_gpio.h	/^	GPIO_DIRECTION_IN,$/;"	e	enum:NX_GPIO_DIRECTION
GPIO_DIRECTION_OUT	nx_gpio.h	/^	GPIO_DIRECTION_OUT,$/;"	e	enum:NX_GPIO_DIRECTION
GPIO_DUT_READY	asb_protocol.h	13;"	d
GPIO_EDGE_BOTH	nx_gpio.h	/^	GPIO_EDGE_BOTH,$/;"	e	enum:NX_GPIO_EDGE
GPIO_EDGE_FALLING	nx_gpio.h	/^	GPIO_EDGE_FALLING,$/;"	e	enum:NX_GPIO_EDGE
GPIO_EDGE_NONE	nx_gpio.h	/^	GPIO_EDGE_NONE,$/;"	e	enum:NX_GPIO_EDGE
GPIO_EDGE_RIGING	nx_gpio.h	/^	GPIO_EDGE_RIGING,$/;"	e	enum:NX_GPIO_EDGE
GPIO_ERROR	nx_gpio.h	/^	GPIO_ERROR = -1,$/;"	e	enum:NX_GPIO
GPIO_MAX	nx_gpio.h	/^	GPIO_MAX,$/;"	e	enum:NX_GPIO
GetBin	asb_protocol.cpp	/^bool CASBProtcol::GetBin()$/;"	f	class:CASBProtcol
GetECID	dvfsutil.c	/^int32_t GetECID( uint32_t ecid[4] )$/;"	f
GetECID	ecid.cpp	/^int32_t GetECID( uint32_t ecid[4] )$/;"	f
INCS	Makefile	/^INCS := $(INCLUDE)$/;"	m
LotIDNum2String	ecid.cpp	/^static void LotIDNum2String( uint32_t lotId, char str[6] )$/;"	f	file:
MAX_FILE_DATA	dvfsutil.c	33;"	d	file:
MAX_FILE_PATH	dvfsutil.c	32;"	d	file:
MAX_NUM_CPU_CORE	dvfsutil.c	35;"	d	file:
MakeCommand	asb_protocol.cpp	/^static ASB_CTRL_PACKET *MakeCommand( int32_t type, ASB_CTRL_OPCODE opcode, uint32_t *data )$/;"	f	file:
NUM_OF_SUB_MODULE	asb_protocol.h	10;"	d
NX_GPIO	nx_gpio.h	/^enum NX_GPIO {$/;"	g
NX_GPIO_DIRECTION	nx_gpio.h	/^enum NX_GPIO_DIRECTION {$/;"	g
NX_GPIO_EDGE	nx_gpio.h	/^enum NX_GPIO_EDGE {$/;"	g
NX_GPIO_HANDLE	nx_gpio.h	/^typedef void *NX_GPIO_HANDLE;$/;"	t
NX_GPIO_HANDLE_INFO	nx_gpio.cpp	/^} NX_GPIO_HANDLE_INFO;$/;"	t	typeref:struct:__anon4	file:
NX_GPioSetEdge	nx_gpio.cpp	/^int32_t NX_GPioSetEdge( NX_GPIO_HANDLE hGpio, int32_t edge )$/;"	f
NX_GetTickCountUs	dvfsutil.c	/^uint64_t NX_GetTickCountUs( void )$/;"	f
NX_GpioDeinit	nx_gpio.cpp	/^void	NX_GpioDeinit( NX_GPIO_HANDLE hGpio )$/;"	f
NX_GpioDirection	nx_gpio.cpp	/^int32_t	NX_GpioDirection( NX_GPIO_HANDLE hGpio, int32_t direction )$/;"	f
NX_GpioGetInterrupt	nx_gpio.cpp	/^int32_t NX_GpioGetInterrupt( NX_GPIO_HANDLE hGpio )$/;"	f
NX_GpioGetValue	nx_gpio.cpp	/^int32_t	NX_GpioGetValue( NX_GPIO_HANDLE hGpio )$/;"	f
NX_GpioInit	nx_gpio.cpp	/^NX_GPIO_HANDLE NX_GpioInit( int32_t nGpio )$/;"	f
NX_GpioPostInterrupt	nx_gpio.cpp	/^int32_t NX_GpioPostInterrupt( NX_GPIO_HANDLE hGpio )$/;"	f
NX_GpioSetValue	nx_gpio.cpp	/^int32_t	NX_GpioSetValue( NX_GPIO_HANDLE hGpio, int32_t value )$/;"	f
OBJS	Makefile	/^OBJS	:= $(COBJS) $(CPPOBJS)$/;"	m
OP_CHIPINFO	asb_protocol.h	/^	OP_CHIPINFO	= 0xa4,$/;"	e	enum:__anon2
OP_GETBIN	asb_protocol.h	/^	OP_GETBIN	= 0xa0,$/;"	e	enum:__anon2
OP_SETBIN	asb_protocol.h	/^	OP_SETBIN	= 0xa1,$/;"	e	enum:__anon2
OP_SETDATA	asb_protocol.h	/^	OP_SETDATA	= 0xa2,$/;"	e	enum:__anon2
OP_SETID	asb_protocol.h	/^	OP_SETID	= 0xa3,$/;"	e	enum:__anon2
PMIC_SYS_FILE_PREFIX	dvfsutil.c	44;"	d	file:
PMIC_SYS_VOLTS_FILE	dvfsutil.c	45;"	d	file:
ParseECID	ecid.cpp	/^void ParseECID( uint32_t ecid[4], CHIPINFO_TYPE *chipInfo )$/;"	f
REGUL_ID_CORE	dvfsutil.h	/^	REGUL_ID_CORE   = 2,$/;"	e	enum:__anon3
REGUL_ID_CPU	dvfsutil.h	/^	REGUL_ID_CPU    = 1,$/;"	e	enum:__anon3
REGUL_ID_LDO_SYS	dvfsutil.h	/^	REGUL_ID_LDO_SYS	= 9,$/;"	e	enum:__anon3
REGUL_ID_SYSTEM	dvfsutil.h	/^	REGUL_ID_SYSTEM = 3,$/;"	e	enum:__anon3
REGUL_ID_TYPE	dvfsutil.h	/^}REGUL_ID_TYPE;$/;"	t	typeref:enum:__anon3
Read	spi.cpp	/^int32_t CSPI::Read( uint8_t *buf, int32_t bufSize )$/;"	f	class:CSPI
SRCS	Makefile	/^SRCS := $(COBJS:.o=.c) $(CPPOBJS:.o=.cpp)$/;"	m
Set3DFrequency	dvfsutil.c	/^int32_t Set3DFrequency( uint32_t freq )$/;"	f
SetCPUFrequency	dvfsutil.c	/^int32_t SetCPUFrequency( uint32_t freq )$/;"	f
SetCPUVoltage	dvfsutil.c	/^int32_t SetCPUVoltage( uint32_t microVolt )			\/\/	CPU$/;"	f
SetCoreVoltage	dvfsutil.c	/^int32_t SetCoreVoltage( uint32_t microVolt )		\/\/	MPEG\/3D$/;"	f
SetData	asb_protocol.cpp	/^bool CASBProtcol::SetData( uint32_t bin )$/;"	f	class:CASBProtcol
SetId	asb_protocol.cpp	/^bool CASBProtcol::SetId()$/;"	f	class:CASBProtcol
SetRegulatorVoltage	dvfsutil.c	/^int32_t SetRegulatorVoltage( REGUL_ID_TYPE id, uint32_t microVolt )$/;"	f
SetResult	asb_protocol.cpp	/^bool CASBProtcol::SetResult( uint32_t result )$/;"	f	class:CASBProtcol
SetSystemLDOVoltage	dvfsutil.c	/^int32_t SetSystemLDOVoltage( uint32_t microVolt )		\/\/	LDO Number 4$/;"	f
SetSystemVoltage	dvfsutil.c	/^int32_t SetSystemVoltage( uint32_t microVolt )		\/\/	System(3.3v)$/;"	f
SetVPUFrequency	dvfsutil.c	/^int32_t SetVPUFrequency( uint32_t freq )$/;"	f
TARGET	Makefile	/^TARGET	:= asb_main$/;"	m
TEST_ITEM_INFO	main.cpp	/^typedef struct TEST_ITEM_INFO{$/;"	s	file:
TEST_ITEM_INFO	main.cpp	/^}TEST_ITEM_INFO;$/;"	t	typeref:struct:TEST_ITEM_INFO	file:
TOPDIR	Makefile	/^TOPDIR := ..\/..$/;"	m
TTY_PATH	main.cpp	157;"	d	file:
TTY_RED_MSG	main.cpp	158;"	d	file:
TTY_RES_MSG	main.cpp	159;"	d	file:
TestItem	main.cpp	/^int TestItem( TEST_ITEM_INFO *info )$/;"	f
VPU_3D_FREQ_FILE	dvfsutil.c	48;"	d	file:
Write	spi.cpp	/^int32_t CSPI::Write( uint8_t *buf, int32_t len )$/;"	f	class:CSPI
_WriteSysInterface	dvfsutil.c	/^static int32_t _WriteSysInterface( const char *file, const char *buffer, int32_t bufSize )$/;"	f	file:
__ASB_PROTOCOL_H__	asb_protocol.h	2;"	d
__DVFSUTIL_H__	dvfsutil.h	21;"	d
__ECID_H__	ecid.h	2;"	d
__NX_GPIO_H__	nx_gpio.h	21;"	d
__SPI_H__	spi.h	2;"	d
appName	main.cpp	/^	const char	appName[128];$/;"	m	struct:TEST_ITEM_INFO	file:
args	main.cpp	/^	const char	args[128];$/;"	m	struct:TEST_ITEM_INFO	file:
bPost	nx_gpio.cpp	/^	int32_t			bPost;$/;"	m	struct:__anon4	file:
binNo	main.cpp	/^	uint32_t	binNo;$/;"	m	struct:TEST_ITEM_INFO	file:
crc	asb_protocol.h	/^	uint32_t	crc:16;$/;"	m	struct:ASB_CTRL_PACKET
crc16_ccitt	asb_protocol.cpp	/^static uint16_t crc16_ccitt(const uint8_t *buf, int32_t len)$/;"	f	file:
crc16tab	asb_protocol.cpp	/^static const uint16_t crc16tab[256]= {$/;"	v	file:
data	asb_protocol.h	/^	uint32_t	data[NUM_OF_SUB_MODULE];$/;"	m	struct:ASB_CTRL_PACKET
descName	main.cpp	/^	const char	descName[64];$/;"	m	struct:TEST_ITEM_INFO	file:
direction	nx_gpio.cpp	/^	int32_t 		direction;		\/\/ gpio direction$/;"	m	struct:__anon4	file:
gTestItems	main.cpp	/^static TEST_ITEM_INFO gTestItems[] =$/;"	v	file:
gTotalTestItems	main.cpp	/^static const int gTotalTestItems = sizeof(gTestItems) \/ sizeof(TEST_ITEM_INFO);$/;"	v	file:
gst36StrTable	ecid.cpp	/^static const char gst36StrTable[36] = $/;"	v	file:
gstStatusStr	main.cpp	/^const char *gstStatusStr[32] = {$/;"	v
hLock	nx_gpio.cpp	/^	pthread_mutex_t hLock;$/;"	m	struct:__anon4	file:
ids	ecid.h	/^	uint32_t ids, ro;$/;"	m	struct:CHIPINFO_TYPE
lotID	ecid.h	/^	uint32_t lotID;$/;"	m	struct:CHIPINFO_TYPE
m_BitsPerWord	spi.h	/^	uint8_t m_BitsPerWord;$/;"	m	class:CSPI
m_Delay	spi.h	/^	uint32_t m_Delay;$/;"	m	class:CSPI
m_Mode	spi.h	/^	uint8_t m_Mode;$/;"	m	class:CSPI
m_Speed	spi.h	/^	uint32_t m_Speed;$/;"	m	class:CSPI
m_hAsbReady	asb_protocol.h	/^	NX_GPIO_HANDLE m_hAsbReady;$/;"	m	class:CASBProtcol
m_hDutReady	asb_protocol.h	/^	NX_GPIO_HANDLE m_hDutReady;$/;"	m	class:CASBProtcol
m_hSpi	asb_protocol.h	/^	CSPI *m_hSpi;$/;"	m	class:CASBProtcol
m_hSpi	spi.h	/^	int32_t m_hSpi;$/;"	m	class:CSPI
main	main.cpp	/^int main( int argc, char *argv[] )$/;"	f
opcode	asb_protocol.h	/^	uint32_t	opcode:12;$/;"	m	struct:ASB_CTRL_PACKET
pid	ecid.h	/^	uint32_t vid, pid;$/;"	m	struct:CHIPINFO_TYPE
port	nx_gpio.cpp	/^	int32_t			port;			\/\/ gpio number$/;"	m	struct:__anon4	file:
reserved	asb_protocol.h	/^	uint32_t	reserved;$/;"	m	struct:ASB_CTRL_PACKET
ro	ecid.h	/^	uint32_t ids, ro;$/;"	m	struct:CHIPINFO_TYPE
status	main.cpp	/^	int32_t		status;		\/\/	0 : OK, 1 : Not tested, -1 : Failed$/;"	m	struct:TEST_ITEM_INFO	file:
stdout_redirect	main.cpp	/^int stdout_redirect(int fd)$/;"	f
stdout_restore	main.cpp	/^void stdout_restore(int od_fd)$/;"	f
strLotID	ecid.h	/^	char strLotID[6];	\/\/	Additional Information$/;"	m	struct:CHIPINFO_TYPE
testTime	main.cpp	/^	uint64_t	testTime;$/;"	m	struct:TEST_ITEM_INFO	file:
type	asb_protocol.h	/^	uint32_t	type:4;$/;"	m	struct:ASB_CTRL_PACKET
vid	ecid.h	/^	uint32_t vid, pid;$/;"	m	struct:CHIPINFO_TYPE
waferNo	ecid.h	/^	uint32_t waferNo;$/;"	m	struct:CHIPINFO_TYPE
xPos	ecid.h	/^	uint32_t xPos, yPos;$/;"	m	struct:CHIPINFO_TYPE
yPos	ecid.h	/^	uint32_t xPos, yPos;$/;"	m	struct:CHIPINFO_TYPE
~CASBProtcol	asb_protocol.cpp	/^CASBProtcol::~CASBProtcol()$/;"	f	class:CASBProtcol
~CSPI	spi.cpp	/^CSPI::~CSPI()$/;"	f	class:CSPI
